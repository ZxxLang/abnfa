; ABNFA Definition of ABNF

; fork RFC 7405

ast            =  1*( rule-Rule-patch-defs-name / (*cwsp cnl) )

name           =  ALPHA *(ALPHA / DIGIT)

rule           =  name--name definedAs elements cnl

defInc         =  "=" / "=/"

definedAs      =  *cwsp defInc--flag *cwsp

elements       =  alternation-Choice-push-alts *cwsp

cwsp           =  WSP / (cnl WSP)

cnl            =  [comment-Comment-push-comments] CRLF

comment        =  commentLit--raw

commentLit     =  ";" *(WSP / VCHAR)

alternation    =  concatenation-Serial-push-alts
               *(*cwsp "/" *cwsp concatenation-Serial-push-alts)

concatenation  =  repetition *(1*cwsp repetition)

repetition     =  option--push-seqs / ([repeat-Repeat-rep] element--push-seqs)

repeat         =  1*DIGIT / (*DIGIT "*" *DIGIT)

element        =  ref-Ref / group /
                  charLit-Text / binary-Binary /
                  range-Range / proseLit-Text

group          =  "(" *cwsp alternation-Choice *cwsp ")"

option         =  "[" *cwsp alternation-Choice *cwsp "]"

ref            =  name--ref ["-" action-Action-action]

action         =  name--produce [
                  "-" [name--method] [
                  "-" [name--property] [
                  "-" [extra--extra]
                  ]]]

extra          =  ALPHA *(ALPHA / DIGIT / "-")

b              = "b"

d              = "d"

x              = "x"


binary         = "%" (  b--formal bin /
                        d--formal dec /
                        x--formal hex )

range          = "%" (  b--formal binRange /
                        d--formal decRange /
                        x--formal hexRange )

binLit         =  1*BIT

decLit         =  1*DIGIT

hexLit         =  1*HEXDIG

bin            =  binLit--push-seqs [ 1*("." binLit--push-seqs) ]

dec            =  decLit--push-seqs [ 1*("." decLit--push-seqs) ]

hex            =  hexLit--push-seqs [ 1*("." hexLit--push-seqs) ]

binRange       =  binLit--first [ ("-" binLit--last) ]

decRange       =  decLit--first [ ("-" decLit--last) ]

hexRange       =  hexLit--first [ ("-" hexLit--last) ]

proseLit       =  "<" prose--raw  ">"

prose          = *(%x20-3D / %x3F-7E)

; fork RFC 7405

charLit         =  insensitiveLit / sensitiveLit

insensitiveLit  = "%" insensitive--formal quotedLit

insensitive     = "i"

sensitiveLit    = [ "%" sensitive--formal ] quotedLit

sensitive       = "s"

quotedLit       =  DQUOTE string--raw  DQUOTE

string          = *(%x20-21 / %x23-7E)

; Core Rules

CRLF    =  (%x0D %x0A) / %x0D / %x0A

ALPHA   =  %x41-5A / %x61-7A   ; A-Z / a-z

BIT     =  %x30-31

; CHAR    =  %x01-7F

; CTL     =  %x00-1F / %x7F

DIGIT   =  %x30-39 ; 0-9

DQUOTE  =  %x22    ; " (Double Quote)

HEXDIG  =  DIGIT / %x41-46 / %x61-66 ; 0-9A-Fa-f

SP      =  %x20

HTAB    =  %x09

; OCTET   =  %x00-FF ; 8 bits of data

WSP     =  SP / HTAB

VCHAR   =  %x21-7E
